<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[以油腻避免油腻]]></title>
    <url>%2F2019%2F02%2F17%2FFitness%2F</url>
    <content type="text"><![CDATA[The best of all medicines are resting and fasting！Benjamin Franklin 最近与二十年前的同学、学弟和朋友联系得比较多，不熟悉的人通常会惊讶于一群人中的老大居然看起来最年轻，往往会打听驻颜秘诀。思考了一番，觉得这得益于20、30年来成长在一个未来非常明晰的环境，所以能够有规划地工作、生活，也避免了许多无谓的烦恼和纠结。 我觉得冻龄或者青春永驻实际上是不可能的，一个人能做到的是规律地生活、有计划地锻炼，从而优雅地老去。我这些年努力做的，其实就是避免油腻、避免啤酒肚，仅此而已。如果要总结秘诀的话，关键在于如下两点： 严格饮食注意饮食的目的非常明确：让自己看到想吃的东西的时候，可以开怀畅饮、胡吃海喝！这个和省钱一个道理，省钱应该是为了在需要花钱的时候，能够毫无顾忌地买买买！如果省钱的目的是成为守财奴，注意饮食的目的是厌食症，那人生乐趣何在？ 我的饮食非常规律，与众不同的则是以油腻避免油腻，主要包括如下要旨： [八小时进食] 我们平时吃饭都担心饿着，但是如果把一天的食物在八小时之内全部吃完，其他的时间八小时睡觉、八小时节食，那么总体来看，除了凭空多出几小时的挨饿时间，吃进去的东西也没少什么。每天可以只吃午饭和晚餐； [避免碳水化合物] 许多人午饭后容易犯困，这称为饭醉。碳水化合物通常在主食中存在，为了避免过多碳水化合物，平时可以不吃主食。其他如蔬菜、大鱼大肉、鸡蛋、高胆固醇食物，都可以尽情享受； [避免甜食] 避免饮酒、冷饮、甜度太高的水果比如西瓜。渴了喝水吧； [每周解禁日] 纯靠意志是做不到上面三点的，所以为了让自己活得尽兴，每周设置一天为解禁日，这一天里可以尽情地把一周来想吃的东西都吃进去，想喝的尽管喝，管他红酒、甜食还是碳水化物； [每周节食日] 解禁得越疯狂，接下来这一天就应越自律。从解禁日最后进食时间开始，24小时节食，不吃东西以解脱那尚存一丝内疚的心灵。 看起来好像非常不靠谱，不过这种方法在西方也称为Keto Diet (生酮飲食)。相关的思路，可以从一些英文文章中找到依据。 规律锻炼每八周一轮训练，采取有氧训练+无氧训练的方式，我自己保持的是： 每周五次跑步，每次30分钟以上；周六长距离10公里以上； 每周六次无氧训练，HITT、Tempo、或者Max 30，每次30分钟。 可以采用Nike Run Club、Nike Training、Keep等记录。另外，记录自己的身体状态，体重、体脂率等，以便明了自己的近期趋势。]]></content>
      <categories>
        <category>Workflow</category>
      </categories>
      <tags>
        <tag>中文</tag>
        <tag>GTD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Acknowlegement 2018]]></title>
    <url>%2F2019%2F02%2F04%2FAcknowlegement2018%2F</url>
    <content type="text"><![CDATA[2019新年的一切看似都与以往无异，但岁月已然更加清晰而又温柔。2018这一年，有太多的改变，有太多值得致谢的人，也有太多值得铭记的事。所以，真心地说一句：谢谢大家！ 致谢团队2018年中，Tulip Aacademy的运行第一次得到规范有序。这一年来的感觉经常是：一眨眼一周就结束了；再一眨眼，一个月又过去了；不经意间，一年也过去了。好在这一年中有组内大师兄子淇的指点、有萌姐像定海神针一样坐镇全局、有劭姐的言传身教、还有思路清晰的金三的技术支持，加上其他Infinity成员的精诚合作，一切难题都得以解决，所有2018年初的规划都如期完成！这一年的快乐时光，也特别值得记录：年初Quan的IFITT年度最佳期刊论文、年中劭姐的KSEM最佳论文、以及年末ATR期刊论文的突破。特别致谢琼姐，2018年初团队最辛苦最无望的日子里，她主持FLIP训练文档和研究组TempLaTeX的修订，有你的时候这个小世界真好！ 有了2018的顺利转型，TULIP Academy的团队运转会更加顺畅！总是想着和西安团队好好聚一次，这个做为2019的新年愿望之一吧。 致谢同行经过了20年的单打独斗，2018中遇到了几位大家的提携，真正感到受宠若惊，也体会到了有Mentor的好处。 首先要感谢的是Batten教授，她多年来一直在关心、支持着我。在我陷入各种困境中的时候，她都是最早给我切实帮助和提携的那一位；中国科学院的李所、谭老师、马处，交大的刘老师、牛老师，南京的周老师、耿老师，湖大的兰兄，对我有知遇之恩，且待我如兄弟，令我每次回归祖国，却倍感温暖；UTS的张大教授力推我进入KSEM委员会，并支持我担任KSEM 2019的大会主席，他让我亲身领略到大家风范，他谦和的为人处事方式，都令我受益良多；香港的振雄兄，一直以兄长般信任我和我的团队，2018年初年末的两大突破，都是他高瞻远瞩的成果；也感谢倪墨姐及新老伙伴。回首2018，尽管也曾纠结、也曾经历太多的挣扎、太多的不甘，仍然衷心各位兄弟！也感谢一些退场使团队幸免于年复一年的无力缠斗。 一路走来，人生接近半百，要感谢的人太多太多。感激之情纵万语千言，难写微茫!]]></content>
      <categories>
        <category>Enterprise</category>
      </categories>
      <tags>
        <tag>mood</tag>
        <tag>中文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[研究生训练概要]]></title>
    <url>%2F2018%2F09%2F02%2FAdvices-to-Trainee-CN%2F</url>
    <content type="text"><![CDATA[2018年8月，实验室西北分舵开山女硕士的第一篇习作在CCF C会议KSEM 2018上全文录用，并获得了最佳学术论文。这对西北分舵的硕士生是一个非常好的激励，至少树立了一个标杆，让大家看到：通过规范化的科研训练，硕士二年级在入门级国际学术会议上发表论文并不是一个高不可攀的目标。平心而论，实验室对于研究生训练方面颇有心得：自2006年招收研究生到现在，一共有8篇论文荣获最佳论文奖，包括2次年度最佳期刊论文。 对于从本科刚刚准备进入研究生阶段、或者从本科进入Honours阶段的同学来讲，在学业上最关心的是GPA、托福/雅思成绩、甚至申报材料的多元化、套辞是否吸引人等等；但是从导师角度看，最关心的则是学生是否合适做科研，细分一下大体上会考察性格如何、相关基础知识和技能如何、抗打击能力如何等等。因为这两个方面的不一致，师生双方的接触通常都伴随着痛苦：学生总是觉得老师不欣赏自己，也找不到自己喜欢的研究组；而老师总是难以评估眼前学生的科研潜力。有鉴如此，我觉得有必要是让学生了解科研是什么、知道自己是喜欢科研这个事情还是喜欢这个学位所以不得已而为之？了解这些，可以避免后面双方合作期的大多数苦痛。 产学研？前些年国内大学很流行产学研相结合这个说法，尽管我并不推崇这个思路，但有必要让大家了解这三者之间的不同。 [学习] 是掌握现有知识和技能。 [科研] 是基于现有知识和技能，来探索未知世界的过程。 [生产] 是基于现有知识和技能，来生产出能变现（Monetizable）的东西。 科研和生产之间最大的区别是：科研通常不直接在意新发现是否可以、或者如何才能用到具体产品上，而生产大多数时候并不在乎对未知世界是不是有新的发现。而大多数情况，科研给生产提供了更加有效的思路和技术方案，这个区别实际上也导致了学术界和工业界的鸿沟。一个有创意的产品，往往来源于许多科研上的进展。上周看到的一个例子是南大图客，该产品的背后依托于RFID、机器视觉、机器人等多个方向的科研进展。许多科研成果不能直接产业化，或者不能单独产业化，然而这并不说明这些科研是没有价值的。 学习是掌握现有专业知识和技能的过程。掌握专业知识这一点清晰明了，关键在于技能：学习的技能大体可以细分为实践技能和研究技能：本科阶段注重于实践技能的训练，而研究生阶段则着重研究技能的训练。许多研究生会抱怨他们所学的东西没有用，其实这是混淆了实践技能（鱼）和研究技能（渔）的区别。实践技能通常和具体专业联系紧密，比如：程序设计、系统分析、系统集成、文档维护等等；而研究技能则通用许多：文献分析能力、批判性思维、理论分析、模拟实验技能、论文写作和报告能力等。中国人都知道授人以鱼不如授人以渔的道理。没有用只是指研究技能不能立竿见影吃下肚变现，但并不说明这些技能没有价值。大多数本科阶段很少涉及研究技能训练，所以许多成绩很好的本科生进入研究生阶段并不是一定比其他同学有更加好的研究成果。 学习和科研的区别在于：学习通常有正确答案，而科研则没有，所以我们经常听说新的科研成果推翻了以前的认知等现象。其实，大多数同学感到痛苦的就是这个点：因为没有答案，所以没有标准可以对科研成果来验证自己是否正确。科学研究必须要有理论证明和实验依据，来说服同行你的思路、方法和结果是可信的。对我而言，科研的乐趣还在于能够选择喜欢做的事情，并且能够显示自己的眼界、品味和智商比别人强高。 研究训练研究训练和武侠小说中功夫修炼非常类似，尽管有许多人幻想捡到武功秘籍一蹴而就登上巅峰，但是最靠谱的还是扎扎实实训练，有朝一日打通任督二脉，进入大牛的行列。 和任何专业技能一样，科研是需要专业的导师指导的。尽管我们都鄙视国家足球队，但是真正踢球的话，野球队无论多么刻苦，技术、配合等各个方面都和专业球队没法比拟。科学研究同样如此，一定需要专业导师的指导。绝大多数自学成才的研究者，最终沦为民科。我以前有一篇给本科生的研究入门文章：Advices to Undergraduate Research Trainee 仍然具有参考价值。从找到导师进入研究组开始，研究生的修炼都有如下阶段： [基础知识] 是掌握本研究方向的已有知识和实践技能，在这个阶段，如果能够熟练运用已有的知识和技能，实现一个对已有问题的解决方案，就差不多过关了。比如我这个研究方向的FLIP (Foundations of Learning and Intelligent Processing)大纲，以及Kaggle竞赛项目的闯关都属于这个阶段。一般学习这些知识大概需要至少一年的时间，花大量的时间看经典课本。要不然，这一关不过，等你开始看研究论文的时候，会发现根本分不清主次，也看不懂文章的新意所在，因为在你眼中什么都是不懂的新东西，这样反而是浪费时间。这个阶段我称为：收集兵器，只有当你的兵器库达到一定规模以后，我才建议大家进入研究阶段。 [研究技能] 是掌握研究技能，包括文献收集、整理、分析能力，批判性思维、理论分析、模拟实验技能、论文写作和报告能力等。这个阶段通常贯穿硕士生到博士生阶段，利用各种不同的机会来锻炼、提高这方面的技能。 [专业积累] 就是看文章，看大量的高水平文章。担心看不懂？没事，有了基础知识，文章写来写去绕不开几本经典课本，看个几遍就熟悉套路了。那么这个大量到底是多少？一般看完100（硕士生）-300（博士生）篇后，相应层次的idea会有如泉涌。因为人的时间是有限的，所以这些花时间阅读的文章需要精挑细选，最好都是CCF B类以上。需要搞清楚每篇提出的问题、解决方案、实验方案、结论。刚开始一周读一篇就很不错，然后争取三天读一篇，到最后可以做到每天读一篇。然后，精选10（硕士生）-20（博士生）篇文章来实现。这个实现的意思是你用自己熟悉的平台工具把这篇文章里的算法实现一遍、benchmark数据跑个对比。在这个过程里你会发现不同算法的弱点，甚至能提出改进，这才叫知行合一，要不然就是眼高手低。有同学问我把所有都实现一遍行不行？ 当然行，只要你有时间，多多益善。最后，做一个文献综述（Survey）。就是把你看过的这些文章综合分析一遍，经过横向和纵向的比较，梳理这个领域里已经解决的问题和尚未解决的问题。做完这两步，大致6-12个月的时间花出去了。没事，磨刀不误砍柴工，欲速而不达。 [硕士研究] 是利用已有知识和技能，解决一个新提出的小问题。一般来说，在这个阶段同学自己提出问题是相对困难的，需要导师的帮助了，甚至解决思路都由导师指定，你利用这个问题来锻炼不同的研究技能。大多数导师对这类问题的思路可行性都有比较大的把握，这一点你需要对导师抱有信心。 [博士研究] 是提出并解决一个新的研究问题，或者提出新的方法来解决已有问题，并且证明你的方法比现有方法好。通常问题的提出和解决思路都会由你自己提出，在写综述的过程中你应该已经非常了解这个领域了。那么到底啥问题没有解决好？ 或者在实现20篇文章的时候有什么新想法？ 这些都可以成为提出的问题。通常，在提出问题（挖坑）方面，导师更有经验，站的更高，看的更远，所以提出的问题更有前瞻性也更有意义。当拿到一个好问题的时候，检验你功力深厚的时间到了，对于非常前沿的题目，导师也不确定有把握解决，但是他的经验和直觉通常可以帮你避免各种不同的坑，少走弯路。 [研究过程] 在对你的问题有了解决思路后，你需要用PPT写成文档，找机会和导师或者合作者做个报告并讨论，看是不是能够说服他们你的问题是有价值的、你的思路是可行的，以及打算如何理论证明哪些结论，试验实现哪些以支持哪些方面的性能分析。这个过程可以帮你理清楚思路，避免理论错误或者方法重复。当然如果你文献综述做得比较好的话，不大会出现方法重复。如果你在这个过程中，能够说服导师或者合作者这个idea有潜在价值、而且他们找不到明显漏洞时，你就可以着手具体研究工作和实现了。 [研究写作] 科技论文的写作是有套路和模版的。一般每个专业都有一些自己的风格，研究组更是有不同的手法。我通常会建议研究生在写作的时候：1) 完成全文，从各个方面把论文写清晰；2) 写作的时候，利用PPT来组织自己的思路，这样文章完成的时候，PPT也已经完成了。 对于研究生而言，基础知识和技能是需要在本科阶段牢固掌握并且熟练运用的，而导师则是结合硕士或者博士论文研究，提供研究思路建议并给出批判性反馈和建设性意见（不强求），来训练学生的各方面研究技能。合格的博士毕业生，应该可以独立进行科学研究，并且作为研究生导师训练新一代的学生。 水平评价本科学习带来的一个误区是，许多研究生会对课程考试成绩特别关注，觉得学业成绩是评价研究生的标准。这是不对的！ 文章是检验研究水平的唯一标准！ 当你的科学研究有了新的发现或者提出了更好方法的时候，你需要把你的研究问题、思路、方法都清晰地写成研究论文，并且利用理论分析、模拟试验、对比试验来说服同行这个发现是有价值的。你必须要以学术界熟悉的方式去表现这篇研究论文，而不是以你自己喜欢的方式，比如说唱、诗歌、散文、博客等。 往什么地方投稿呢？专业的导师会告诉你本领域都有哪些重要会议和刊物。CCF把入流的计算机类会议和期刊划分为A、B、C三档，目前这个排名是公认比较靠谱的。学术界公认原则是：你的研究工作越好，文章写的越由说服力，发表的会议或者期刊档次也就越高。这些都是靠同行评价来实现的，各个会议的Programme Committee，期刊的Editorial Board主要是做这个事的。 对于不熟悉的研究方向，我们很难判断一个会议或者期刊是不是高端。但是对于工程类和计算机类专业来说，有几条非常好用的规则可以套用： IEEE Transactions、 ACM Transactions都可以认为是好的刊物，一般都会在B类以上。 ACM会议大多数都是高端会议，至少在B类以上。 IEEE会议鱼龙混杂，有非常高端的，也有非常一般的，但是不会差得太离谱。 Springer、Elsevier、IEEE、ACM这些出版社的期刊一般都不差，但是Open Access类的则差一档。 不同研究方向正如不同的体育项目，通常不可比的。但是，学术界有两个通用量化指标： citations：你的文章收到了多少次引用； h-index：你有n篇文章至少收到了n次引用。 以前比较标准的是SCI/SSCI版本的量化指标，现在流行Google Scholar版本的。主要原因是对每个研究者而言，Google Scholar的两个数字都比SCI/SSCI要大一些。另外，在学术交流的场合，收到名片后许多人会顺手看看对方的Google Scholar，以便衡量一个研究者的高度。大体上，citations超过2000就是合格的研究导师，h-index达到40就可以算是大牛级别。]]></content>
      <categories>
        <category>Students</category>
      </categories>
      <tags>
        <tag>Methodology</tag>
        <tag>中文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欲善其事先利其器（LaTeX Workflow）]]></title>
    <url>%2F2018%2F07%2F31%2FTools-LaTeX%2F</url>
    <content type="text"><![CDATA[In the past three decades, I have spent most of my writing time in typing LaTeX for academic papers, research presentations, assignments and even examination papers. As is the natural inclination for computer scientists, I have been improving my workflow for many years so that I can maximize the productivity while minimizing the labour work. Here is the LaTeX workflow with which I feel comfortable. LaTeX FoundationsThere is no need to emphasize more on the convenience of using LaTeX for academic writing. If this sounds geek to you, you need to read some foundational materials such as WikiBook. For the workflow related to LaTeX writing, I recommend the following cross platform packages: TeXLive!: LaTeX distribution Visual Studio Code: with extensions such as LaTeX Workshop, Markdown All in One, etc. LaTeXDiff and Git-LaTeXDiff: Version difference extraction and visualization SmartGit: free for non-commertial use Bitbucket or GitHub: git Repository Grammar/Spelling Checking for LaTeXASpellMany excellent spell checkers for the LaTeX are available, such as ASpell, which can be incorporated into the compilation process. Before you compile you can do 1aspell -t -c report.tex It lets you interactively spell check the whole file. The -t option is to tell the spell checker that the file is in TeX or LaTeX format so that it will ignore macros. If you prefer to simply get a list of misspelled words non-interactively, you can run: 1cat file.tex | aspell list -t | sort | uniq Grammar Checking ToolsQueequegQueequeg is a simple command-line tool aimed exactly at finding concordance errors in English. It works with LaTeX sources out of the box. 1qq -t mainbody.tex TeXtidoteTeXtidote is a command-line tool based on LanguageTool so that it can work on LaTeX files. 1java -jar textidote.jar --html mainbody.tex &gt; checkreport.html Polymorphical EditionsAs a researcher, you might need to prepare different editions of the same technical report for different submitting channel: the conference, the journal, etc. You should be aware of the difference between two terms: Revision: One particular state of the files in a project, positioned along one or more lines of the development history Edition: One particular variation which has a purpose in being different from other variations, such as the conference edition, the journal edition, the technical report edition etc. Notice that I have avoided using the word version, which is too ambiguous. The method to maintain multiple editions is to create a configurable master file, and to include it from a series of top-level files, one for each Edition that is required. For an illustration of general principles for making polymorphic editions, we can use the following example using Viktor Eijkhout’s comment package and Hendrik Mittby’s todonotes package. Suppose three editions with 4 TeX files are: The conference edition: with some block for conference only The journal edition: with some block for journal only The report edition: with all blocks Conference.tex:123456789101112...%=================================================================\usepackage&#123;comment&#125;%=================================================================%\excludecomment&#123;JournalOnly&#125; \includecomment&#123;ConferenceOnly&#125; %%=================================================================\input&#123;mainbody&#125;... Journal.tex:123456789101112...%=================================================================\usepackage&#123;comment&#125;%=================================================================%\excludecomment&#123;JournalOnly&#125; \includecomment&#123;ConferenceOnly&#125; %%=================================================================\input&#123;mainbody&#125;... Report.tex:123456789101112...%=================================================================\usepackage&#123;comment&#125;%=================================================================%\includecomment&#123;JournalOnly&#125; \includecomment&#123;ConferenceOnly&#125; %%=================================================================\input&#123;mainbody&#125;... mainbody.tex:12345678910111213141516...\usepackage&#123;comment&#125;\begin&#123;ConferenceOnly&#125;We have \SI&#123;10&#125;&#123;\hertz&#125;,\si&#123;\kilogram\metre\per\second&#125;,the range: \SIrange&#123;10&#125;&#123;100&#125;&#123;\hertz&#125;.$\nicefrac[]&#123;1&#125;&#123;2&#125;$.\missingfigure&#123;Make a sketch of the structure of a trebuchet.&#125;\end&#123;ConferenceOnly&#125;\begin&#123;JournalOnly&#125;This is a paragraph which is only available in journal edition,and the conference one will not include it.\end&#123;JournalOnly&#125;... Collaborative Writing in Git + LaTeXGit is mainly used as the repository for code. Considering that LaTeX is a kind of scripting, it is a natural choice to put your writing under version control systems such as git. You may wonder what are the advantages of this over GUI tools such as Microsoft Word. I can quickly list some of the things that I find not easy to do in Microsoft Word: Maintain a full editing history, and quantify the line by line contributions from co-authors; Tag, Release and Branch the project; Easily creating a PDF with revision details; Adding comments by hiding the source in the LaTeX source; Multiple authors writing at the same time, on the same file! Setup Git RepositoriesOne Repository in local texmf tree For All PapersA local texmf tree is for putting various package-like-artifacts, that are not proper packages managed through your package manager (e.g. Miktex or TeXLive). How to setup a local tex tree is beyond the scope of this answer but it isn’t hard: for Windows, most likelty the home directory under ~/texmf/tex/; for macOS, please put it under /usr/local/texlive/texmf-local. For MkTex on Windows, you can run mktexlsr; For TexLive you can type the following command:12cdsudo texhash The local texmf tree means that you never have to use absolute, or even relative paths for your bibliography bib files. It is also very useful as many conferences and journals distribute their own templates and styles not through CTAN, but just as .sty and .bst files. Put the .bib in local texmf treeAt our team, we have several common bibliographic files in the BibTeX format: tuliplab.bib, deeplearning.bib, tourism.bib and hospitality.bib etc. They reside in our common texmf tree in the subfolder /bibtex/bib/. Hence, all members can specify the bibliography by only using the file name (such as \bibliography{tuliplab} without the full path) — no matter where your working copy of the common texmf tree is located. Add local texmf tree to gitOnce you have created that tree, add it to git. Then when ever you work on a new computer check out the repo from git, and tell your TeX distribution to know about the local texmf tree. One Repository Per PaperThere are many free or public available platforms for Git, such as GitHub or Bitbucket. You need to create one new repository in your chosen git platform, and initialize it with all the necessary .tex and .bib files. We recommend the following folder structure: 1234567891011121314151617181920├── .git # Git folder automatically created upon git checkout.│ ├── ... │ ├── gitHeadInfo.gin # auto generated git information │ └── hooks # store those triggers so that gitinfo can be auto generated├── Data # contains the training data, test data, validation data sets├── Code # contains the source code, script, or Python notebook └── Report # tex, bib files ├── figures # subfolder ├── report.tex # working draft master file, you should use this for CS papers ├── report-htm.tex # working draft master file, you should use this for HTM papers ├── report-lncs.tex # template master file for Springer conferences LNCS format ├── report-ieee.tex # template master file for IEEE conferences format ├── report-acm.tex # template master file for ACM conferences format ├── mainbody.tex # mainbody TeX file for your paper ├── tuliplab.bib # BIB file for tuliplab publications ├── yourbib.bib # BIB file for your own research paper&apos;s references ├── slides.tex ├── poster.tex └── ...` For version information, you need to use the following package: GitInfo2: This package requires some configurations under your project’s .git/hooks folder, and after that it will work like a charm. You can test it by checking out or pulling/pushing your repository, and it should generate/update the file ./git/gitHeadInfo.gin in the local project repository, such as ~/MyFancyPaper/.git/gitHeadInfo.gin. Here is one example of using GitInfo2 in the LaTeX file. LaTeXDiff and Git-LaTeXDiff: LaTeXDiff will take two LaTeX files and produce a formatted difference output in PDF, while Git-LaTeXDiff combines git and LaTexDiff together such that you can easily view the difference between two committed versions. 123git latexdiff HEAD~N # diff between your work tree and the N commits back git latexdiff HEAD~1 --main MyFile.tex # can specify the main tex filegit latexdiff HEAD~3 HEAD~5 --main MyFile.tex # diff between the 3rd and the 5th commits back Here is one sample output of the difference PDF: LaTeX git workflowGit-FlowIf you didn’t use branches sufficiently, you can use git in the old fashion of svn. However, branches allow much more flexible development of the project, and you should learn it from here. Once you have some general knowledge of git branches, I recommend to use the Git-Flow, a branch-based workflow that supports teams and projects where deployments are made regularly and development is continuous. A good tutorial on it can be found at Bitbucket. Typically, you will have two major kinds of branches: master branch should be treated as the main flow of your work, and it should be always production ready, and in a ready to submit state. develop branch is parallel to the master branch, it is the main branch where the source code of HEAD always reflects a state with the latest delivered development changes for the next release. Next to the main branches master and develop, the development model uses a variety of supporting branches to aid parallel development between collaborators, ease tracking of features, prepare for submission and to assist in quickly fixing problems. Feature branches: branch off from and merge back into develop branch. They are used to develop new subsections (features) for the paper. Release branches: branch off from develop and merge back into develop and master. When the state of develop is ready for a submission, we branch off and give the release branch a name reflecting the submission, such as IJCAI2018. Hotfix branches: branch off from master and merge back into develop and master. It is typically used to fix those identified issues existing in all existing and working branches. So we use it when revising based on the review comments of the submission. LaTeX + Git-FlowThe main idea is that we will create one repository with different subfolders for one project (paper), and use the git-flow and tagging to develop the paper. The following figure illustrate the commit history of one paper repository. Rules for Collaborative LaTeXingYou MUST follow the following rules when writing collaboratively. Otherwise, your co-author will find it impossible to work together. Rules for LaTeX Source Code Avoid ineffective modifications. Do not change line breaks without good reason. Turn off automatic line wrapping of your LaTeX editor. Start each new sentence in a new line. Split long sentences into several lines so that each line has at most 80 characters. For all the marginal comments by other co-authors, you MUST responed to them using a responsive marginal comment, such as 12\gangli&#123;What is wrong here?&#125;\qwu&#123;This is my response ...&#125; If your comment has been properly addressed by co-authors, you MUST remove or comment out both the original and the response marginal comments. You can customize related blocks and use the following code to indicate where you are updating up to: 1\gliMarker %TODO: YourName up to here! Rules for LaTeX+Git Workflow Put only those files that are directly modified by the user under version control. Frequent commits of minor changes: add a meaningful and descriptive comment when committing your modifications to the repository Don’t commit a broken version: verify that your code can be compiled flawlessly before committing. Use git-latexdiff or latexdiff (or git compare tools) to critically review your modifications before committing them to the repository. Use the git client for copying, moving, or renaming files and folders that are under revision control. Use git-flow scheme to create feature, branch, release and version of your paper. Be really careful when you are touching develop or master branch. master branch represents the life of the public document, which should always be ready for releasing to others; develop branch accumulates all finished features and keeps the lifecycle of all development before release. feature branch for major items of work, for example, I am adding the section of experiment etc. If you are quite sure that it can be done without affecting other collaborating author’s workflow, you can directly work on the develop branch. Using tagging extensively to keep notes on what a given point in the history means. You may need to familiar with SemVer.]]></content>
      <categories>
        <category>Workflow</category>
      </categories>
      <tags>
        <tag>GTD</tag>
        <tag>Tools</tag>
        <tag>Workflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欲善其事先利其器（信息安全篇）]]></title>
    <url>%2F2018%2F06%2F17%2FTools-Security%2F</url>
    <content type="text"><![CDATA[我习惯以工作流（Workflow）的自动化程度、安全程度、以及核心任务效率来选择工作环境和软件工具。10年前，办公室用的是ArchLinux，后来换用Laptop后发现Linux系统通常电源管理效率不高：Windows可以跑4个小时的ThinkPad，Linux差不多1个半小时就撑不住了。2010年左右，毅然投入了Mac阵营，当然更重要的原因可能是： 男人有钱就变坏，Linux用户有钱就用Mac！ Anonymous Mac的方便之处在于可以无缝接入Unix/Linux技巧，特别是~/.ssh、~/.config、~/.gnupg等各类配置文件拿来就用。多年来积累下的许多偷懒技巧都是跨平台的，在心情和状态不好的时候，打算把这些常用的工作流整理总结一下，也许还有优化的余地。 这篇介绍网络环境下的远程协作常用的信息安全工具。 网络工具即时通讯 钉钉： 如果单纯看集成功能，钉钉是用过的最方便、最大方的系统。可以提供全球手机短信、中国手机语音提示等功能，内置邮件管理系统、石墨文档、Teambition、共享空间等附加功能，对于中小研究团队非常合适。 Use anything by Open Whisper Systems.Edward Snowden Signal：Snowden推荐的即时通讯协议，按说不大容易被偷听到吧。 WhatsApp：不熟悉Signal的人喜欢用这个，现在归Facebook了，慎用。 VPN许多大学和公司都提供了VPN服务，但是在许多时候会有必要使用自己的VPN服务器。这方面网络上有许多不错的教程，通常需要的平台和服务类似于： GoDaddy：域名注册和管理 Amazon EC2：设置虚拟服务器VPS WhatsMyDNS：测试DNS 有了自己完全控制的VPS，你可以安装不同的服务包括VPN。用过最方便的是： Algo 服务器设置好后，别忘记了在自己的手机和计算机上面安装VPN服务器的Apple Profile或者Certificate。连上后，用Whoer或者WhatisMyIP查看一下显示的IP信息是否如你所愿： 触网无痕 Tor：著名的洋葱网络，通常配置起来不大容易。好在现在可以直接下载Tor Browser，即装即用1。 DNSCrypt：洋葱网络也不能完全保证安全，DNS查询时大多数ISP会知道你访问的是什么网站，这就是DNS Leakage问题，如下图所示： 你的公司或者大学尽管不知道你在每个网站访问了什么内容，但通常非常清楚你访问了什么网站，甚至一些中间DNS也会知道这些。你可以用DNSLeakTest.com检查目前DNS查询是否不安全。采用DNSCrypt应该可以避免这些问题。当然，你的公司或者大学也会有其他手段，包括防止你采用DNSCrypt2。 如果你使用OpenVPN的话，可以在VPN服务器配置 .conf (or .ovpn)上面设置关闭外界DNS。 1block-outside-dns DuckDuckGo：网络搜索引擎采用这个。学术论文搜索可以用Google或者Bing补充。 浏览器扩展：大多数浏览器都有扩展功能，我自己使用下面这些： Ghostery uBlock，upstream软件在是uBlock，需要熟悉一下文档。 DuckDuckGo 工作SSH ConnectionSSH Keys可以让你在远程ssh登陆服务器的时候，不需要每次都输入命令。这方面的中英文教程非常多，随便哪一篇都可以。 https://help.github.com/categories/authenticating-to-github https://confluence.atlassian.com/bitbucket/ssh-keys-935365775.html SSH 公钥私钥目前情况下，建议采用4096 bits RSA key。 1ssh-keygen -b 4096 生成密钥的时候别忘记设置passphrase，这个在文件被人拿走的时候可以多一层保护。生成完成的话，会在~/.ssh目录下产生2个文件：私钥id_rsa和公钥id_rsa.pub。这个私钥非常重要，必须千方百计保护好；公钥可以发送到ssh服务器上面。下面的命令可以检查，这个公钥是不是有效编码：1ssh-keygen -l -f ~/.ssh/id_rsa.pub 如果你只有私钥，你可以用下面的命令重新生成公钥：1ssh-keygen -y -f ~/.ssh/id_rsa &gt; ~/.ssh/id_rsa.pub SSH 公钥上传所有你需要使用的ssh服务器，都可以放一份公钥到~/.ssh/authorized_keys文件中，命令如下：1ssh-copy-id user@remote.example.com 对于GitHub，你可以把公钥内容通过浏览器贴到Personal Settings里面：1cat ~/.ssh/id_rsa.pub|pbcopy GitHub测试命令如下：1ssh -T git@github.com 让系统记住你的Passphrase:1/usr/bin/ssh-add -K PGP Encryption如果你觉得保密性不重要，那么想想你会把情书用明信片寄出去吗？GPG公钥/私钥模式，把如同明信片一样明文通信内容，加上了一个只有收件人才能打开的信封。GPG是PGP的GPL实现，和ssh密钥类似，也是有公钥、私钥之分。见到一个比较有意思的类比：公钥相当于你的银行帐号，私钥相当于你的银行卡。银行帐号是公开的，朋友可以用这个来给你汇钱；银行卡需要小心藏好，你需要凭它以去取你的钱。在通讯中，可以用私钥签名数据，用公钥验证签名；或者用对方的公钥加密数据，对方利用其私钥才解密，具体如下图示： 这里的逻辑和名字一样有些绕，建议参考这篇网文。 PGP 公钥私钥许多参考文献3都提供了详细的命令行用法。MacOS有一个很方便的GUI工具GPG Suite，可以管理密钥，也提供了Apple Mail和Services的扩展，可以方便进行邮件、文件还有文字的签名。 密钥生成的时候，需要注意如下几点： 密钥长度至少设置为4096 设置passphrase 生成revocation certificate1gpg --output revoke.asc --gen-revoke &lt;myKeyID&gt; PGP私钥和撤销钥都需要小心保护。公钥可以发布出去，供和你加密通讯或确认你的签名。公钥可以用下面生成：1gpg -a --output key.public --export &lt;myKeyID&gt; 此外，你还可以发布你的fingerprint。例如我的fingerprint是：123fingerprint: B288 97A6 061C 8228 7E27 E9D4 4CBE EB6E CA42 5B3Dlong id: 4CBE EB6E CA42 5B3Dshort id: CA42 5B3D 你可以基于fingerprint找到公钥：1gpg --recv-keys CA425B3D 加密签名文件签名如果你打算对一个文件MyDoc.pdf签名，下面命令可以生成独立签名文件MyDoc.pdf.sig：1gpg -b MyDoc.pdf 收到这两个文件的时候，可以验证签名：1gpg --verify MyDoc.pdf.sig 加密解密比如如果你打算加密后送给我文件MyDoc.pdf，可以用下面命令生成一个新文件MyDoc.pdf.gpg：1gpg -r gangli -e myDoc.pdf 我收到后，可以解密：1gpg -d myDoc.pdf.gpg --output myDoc.pdf Visual Studio Code设置VSC有个GPG扩展，可以对文本编辑器中的内容进行加密、解密。 账号管理注册的网站多了，有时会遇见一个苦恼：密码大体记得，跑不了是常用的若干个之一，但是用户名忘记了。这里最好是采用Password Manager。著名的包括1Password、LastPass等，另外一个好用的是KeePass及其KeePassXC。你的所有账户信息、甚至密钥都可以放同一个.kdbx数据文件中，保护好这个文件并且别忘记添加passphrase。 1: 不小心发现大学的网络一直不让大家链接到Tor。↩ 2: 我的大学网络上面居然不能使用DNSCrpyt，只能在家里网络上面使用。 ↩ 参考文献↩ https://confluence.atlassian.com/bitbucket/set-up-an-ssh-key-728138079.html https://help.github.com/articles/generating-a-new-gpg-key/ http://aplawrence.com/Basics/gpg.html https://www.lifehacker.com.au/2013/08/how-to-encrypt-your-email-and-keep-your-conversations-private/ http://www.ruanyifeng.com/blog/2013/07/gpg.html http://www.alexgao.com/2009/01/24/gpg/ http://blog.csdn.net/heavenboya/article/details/6684800]]></content>
      <categories>
        <category>Workflow</category>
      </categories>
      <tags>
        <tag>中文</tag>
        <tag>GTD</tag>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[振雄兄和倪墨姐]]></title>
    <url>%2F2018%2F06%2F11%2FNemo%2F</url>
    <content type="text"><![CDATA[All of life is an act of letting go,but what hurts the most is not taking a moment to say goodbye. 我比较有影响力的科研工作都是和合作者一起做出来的。纵横江湖二十年，对我的影响特别大是两位合作者：一直视我为小弟的振雄兄，以及一直视我为大哥的倪墨妹。 某种程度上来说，振雄兄是我科研的引路人。和他合作伊始，我便观摩、学习他系统的研究方法、研究规划，以及学术交流的技巧等；而倪墨妹呢，最开始算是我的学生，而我的各种心得体会都悉心传授。可是，为什么我称呼她倪墨姐呢？ 这得从她思维方式谈起，女生最大的加分项就是兼具某些男性化的思维方式。当一个女人表达出卓越的理性和洞察力，对男人当前面临的难题发表出一针见血的见解，这个时候在异性眼中简直是满分。倪墨就是这种神一样的存在，特别是在2012-2014年，她经常能够对我各个方面规划都给出了令我大开眼界的建议，所以，我尊称她为倪魔羯。这世上有魅力的人，总是那些同时具有男女两种思维方式的人，很幸运我这辈子碰到的振雄兄和倪魔姐都有这样的魅力。 只可惜人生是一场停不下的旅程，守住一个地方，也挡不住头上的白发，留不住飞去的时光。 任何一件匪夷所思的事情背后，都有一个不为人知的真实原因，以及一个明显非常有说服力所以广为大家接受的公开原因！]]></content>
      <categories>
        <category>Enterprise</category>
      </categories>
      <tags>
        <tag>mood</tag>
        <tag>中文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Puppy]]></title>
    <url>%2F2018%2F05%2F02%2FPuppy%2F</url>
    <content type="text"><![CDATA[A student pursuing a PhD is somehow like a dog chewing bones: novel ideas leading into great achievements are like fresh meats between bones. The first step is to sense where the meat bones are. Normally, wherever the dogs are gathering, the bones are abundant ;) A creative dog will feed itself with fresh meat before the others finish it all, or be a dog explorer, questing in the desert where no other dog is around: When you find a pile of bones, congratulations, there are no competitors, hence all the bones are yours. If you finish all of the bones, you will grow into a big cow. Usually, these kinds of dogs will be awarded as Turing winner ;) For the puppies that are pursuing a PhD, it is always a good idea to find a guide dog with a great sense of smell, who knows better on where there may be bones. What the puppies need to do is to simply follow the guidance and eat up the meat from the the bones. Unfortunately, in most of the cases, the guide dogs are pretty stupid themselves, and know nothing about bone-seeking, or may only lick leftover bones. The puppies under their guidance will suffer from starvation and tear for their empty tummy. However, as it is hard for puppies to break a clue, it is miserable. 读ph.d.做研究, 就像一条狗在啃骨头.做出新意出成就来, 就是在骨头里面发现了fresh的肉.首先, 要判断哪里能找到还有肉的骨头,一般而言, 狗群最多的地方, 骨头也最多;)做条creative的狗, 在别人吃精光以前, 发现一点肉填肚子;还有一种可能, 就是在完全看不到狗,还是有可能有骨头的沙漠中探索, 如果发现一堆骨头, 那么恭喜你, 没别的狗和你抢,这堆骨头全是你的,吃完就成了big cow,呵呵. 这种狗会被授予图灵奖;)去读ph.d.做research的小狗们呢, 最好找个嗅觉灵敏的大狗做advisor,他们知道什么地方可能有骨头, 在大狗的带领下去努力的发现骨头里面的肉就行了.而普遍的情况是, 大狗也笨得很, 不知道哪里有骨头, 或者只会舔吃剩的骨头,跟在后面的小狗, 没有肉吃, 肚子饿的汪汪叫, 独自去闯又难以摸着头绪,比较惨.]]></content>
      <categories>
        <category>Students</category>
      </categories>
      <tags>
        <tag>Methodology</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我是人间惆怅客]]></title>
    <url>%2F2018%2F04%2F21%2FMelancholy%2F</url>
    <content type="text"><![CDATA[这些年来不时会听到一个声音在耳边回响： 早些结束吧，这样的僵持对谁都是一种煎熬。 尽管一直处于弱势而苦苦支撑，但忽然发现不止我熬不下去的时候，刹那间如释重负，可一转头又心如刀绞。 跨越这段艰苦岁月，忽然觉得日子过的真快呀，看到十年前的照片我居然震惊地问：那个清淳中透着甜意的人到哪去啦？这些年到底发生了什么？ 对中年的我来讲，十多年只是弹指一挥间：刚涉足江湖的我，青春年少，以诚挚的心对待着每一个人。现在的我，自带一种戒备之心，常常不自觉地审视周遭。这十多年，该是一种怎样的磨砺和成长？ 那年你意气风发，艺成下山，恰逢与我同道，四方觊觎，我挡在前，力保你不受侵害，我双手战多人，虽吃力但仍可支撑。 忽觉背后一箭飞至，知你会替我挡下。你扬起宝剑，与那小小箭簇，一起刺进我的后心。 我拔出利刃，但无法回刺，只能笑敲你额头说：兵器拿好呀你冷静得我很陌生：你太幼稚一瞬间难以置信人生最黑暗的时刻痛到死的恍然大悟此生都不愿再重复心疼自己 其实仍在同一片江湖，每闻你们笑傲的身影时，眼前总是浮现出当年那个聪明伶俐的小跟屁虫，可那已经是好多年前的事情了点点滴滴雨，冷去故人心江湖路远，再也不见。 残雪凝辉冷画屏。落梅横笛已三更。更无人处月胧明。我是人间惆怅客，知君何事泪纵横。断肠声里忆平生。——《浣溪沙》纳兰容若]]></content>
      <categories>
        <category>Enterprise</category>
      </categories>
      <tags>
        <tag>mood</tag>
        <tag>中文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欲善其事先利其器（信息管理篇）]]></title>
    <url>%2F2018%2F04%2F21%2FTools-Info-Management%2F</url>
    <content type="text"><![CDATA[信息爆炸时代，如何筛选、阅读、分享自己喜欢的文章，尤显重要。 这里给大家介绍我多年偷懒如风的Workflow以及支撑工具： 电脑系统 在任何时候的事故，例如计算机丢失、硬盘损坏等，都不会影响到你：你仍然可以很快地找到资料的备份，把文件重新同步回来；即使被迫使用不同的操作系统（Windows, OS X, Linux），所有软件都应跨平台以保持工作流程不变。 文件管理高效率的文件管理背后是充分利用各种云存储，当前在世界各地，同步比较迅速的云存储平台包括下面几个： Dropbox 免费账号可以拿到25G空间，可以作为主力同步盘。国内可以用么？ OneDrive 免费账号可以拿到10G空间，好处是和IOS上面的各种MS工具无缝接入，所以用来存放PPTX文件，以及OneNote笔记 GoogleDrive 免费账号可以有15G空间，主要用于Google Doc的在线编辑文档。国内使用需要翻墙 Baidu Drive 免费账号可以有2T空间，可以用来存放各种视频和课程资料。 教学、研究、管理、个人、家庭事务中会有各类不同的文档，我的建议是： 确定适合自己所有事务的文件目录结构，各个文件根据其主题就可以明确地归属于特定目录。 下面是我这些年采用的文件目录结构： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556├── Deakin│ ├── Career │ │ ├── ASP│ │ ├── Letters│ │ ├── PPR│ │ ├── Profile│ │ ├── Promotion│ │ └── Training│ ├── Reimbursement│ │ ├── ...│ │ ├── 2018│ │ └── Travel│ ├── Research # 研究合作文档，同步到OneDrive│ │ ├── Collaboration│ │ ├── Committee│ │ ├── GrantApplication │ │ ├── Reviewer│ │ └── Talks│ └── Teaching # 课程教学文档，同步到OneDrive│ ├── Admin│ ├── DEAKIN-BIT│ ├── DEAKIN-HDR│ ├── DEAKIN-MIT│ ├── Resources│ ├── ShortCourses │ └── Talks├── GLi│ ├── ActiveDesk # 当前正处理、阅读的文档，同步到OneDrive│ ├── Documents│ └── Projects # GIT本地目录，同步到DropBox├── Home│ ├── Family│ └── Finance├── Shared # DropBox共享文档│ ├── Collaboration│ ├── Home│ ├── TULIP│ └── Temp└── TULIP # 同步到OneDrive ├── Admin │ ├── Application │ ├── GroupMeeting │ ├── Induction │ ├── Report │ └── Regulations ├── Repository # 研究数据、代码、重要论文、博士论文、VI │ ├── Codes │ ├── Data │ ├── Publications │ ├── Thesis │ └── VI └── Supervision ├── Archive ├── Members └── Notes # 指导笔记、点子库` 系统备份这里指的是软件系统。如果可能，尽量采用跨平台的软件，比如我经常使用的办公软件包括： Microsoft Office：除了常见套件，OneNote也是日常笔记工具 Safari：在Mac上运行比较节省电池电量，而且也有不错的扩展，比如DuckDuckGo Privacy Essentials、Pocket、Grammarly、Ghostery、uBlock Origin等。Safari Technology Preview可以作为后备，当某些网站被安全扩展block的时候使用。另外Firefox、TorBrowser、Chrome、Brave-Browser也作为必要补充 Visual Studio Code：文本编辑器 SmartGIT：Git客户端 软件安装不复杂，但麻烦在于怎么让这些自动化起来？以及怎么保持配置自动恢复？ 在Mac上，我把常用的软件安装写成了一个MacSetup，可以支持计算机上重新安装所有软件，并且一行命令升级整个系统。 1./brewup.sh 其中使用了两个高效率的工具： Homebrew：用于Linux/Unix工具以及Cask软件的安装和升级自动化 Mackup：常用软件的配置文件备份，其实是直接放云盘，恢复的时候链接回即可 信息获取资源管理信息分为两种：明确知道来源的信息，比如某大牛的微博、微信、博客等等，这种一般不会令你失望；另一种是他方推荐过来的信息，通常需要使用朋友圈、reddit来看看其他人都在阅读什么。相应地，有不同的工具和平台： Feedly 对于目前知道来源的信息，可以订阅其RSS。作为Google Reader之后比较方便的平台，免费账号在功能上基本满足要求。其100个订阅的限度也可以帮助我们精简资源，每次临近额度的时候，都可以删除一些不再更新的RSS。 本地的话，可以用Reeder同步Feedly账号，看有哪些更新阅读。 Reddit 如果没有用过的话，这个类似于百度贴吧，或者抽屉？受好评的帖子会被顶到上面。 Quora 类似于国内的知乎，可以碰到好多牛人，比如Andrew Ng，Yan Lecun。在上面可以问各种问题，也会看到好多有趣的回答。 StumbleUpon 网页推荐系统，基于你以前喜欢的网页，推荐你可能喜欢的内容。周末打开的时候，经常有惊喜。 稍后阅读按说浏览器、微信、Twitter等都可以直接阅读，并且方便回复。但是，信息收藏、阅读渠道太多会显得杂乱无章，而且不容易搜索或分享，所以后来我的非工作阅读就统一到一个软件： Pocket Pocket在各主流浏览器上都有插件，碰到喜欢的网页，直接存到Pocket即可。阅读的时候，碰到喜欢的文章， Favorite一下；想分享的时候，Tag一下，比如标成buffer。 归档分享平时需要经常使用的信息，用OneNote记录，以便及时参考。系统化的信息，包括工作流、文件结构等等，用Blog整理出来，给其他人做参考。 你可能觉得，Pocket中喜欢的内容，Tag或Favorite一下到底会发生什么呢？我主要是采用If This Then That的服务，结合如下平台： Evernote是我用过的最佳归档工具。它的检索非常快，而且网页版插件也非常好用。 BufferApp可以作为社交网络帖子的缓存，你可以设置如何定期贴出去。有时间的话，可以琢磨着许多偷懒的办法。利用这个结合IFTTT把好多社交网络账号比如Weibo、Twitter还有Yammer统一起来，只要发一次，其他账号自动同步发。 偷懒如风除了研究之外，许多事务我尽量安排自动化进行。附上我目前的工作流： 该流程用Graphviz生成，其dot源代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465digraph G &#123; rankdir = LR IFTTT [shape=tripleoctagon,style=filled,color=lightblue]; Pocket [shape=folder,style=filled,color=lightblue]; Buffer [shape=tab,style=filled,color=lightblue]; Evernote [shape=folder,style=filled,color=lightgrey] subgraph cluster_0 &#123; node [style=filled]; color=blue label = &quot;Information Collection&quot;; RSS -&gt; Feedly -&gt; Reeder StumbleUpon -&gt; Safari Reddit &#125; Reeder -&gt; Pocket Safari -&gt; Pocket IFTTT -&gt; Pocket [label= &quot;from reddit&quot; ] IFTTT -&gt; Buffer [label= &quot;tag `buffer&apos;&quot; ] Pocket -&gt; IFTTT [label= &quot;tag `omnifocus&apos;&quot; ] Pocket -&gt; IFTTT [label= &quot;flip `Favorite&apos;&quot; ] Pocket -&gt; IFTTT [label= &quot;tag `buffer&apos;&quot; ] Reddit -&gt; IFTTT [label= &quot;`upvote&apos; or `save&apos;&quot; ] subgraph cluster_1 &#123; node [style=filled]; label = &quot;Social Networks&quot;; color=blue Twitter Yammer Facebook Linkedin &#125; Buffer -&gt; Twitter Buffer -&gt; Yammer [style=dashed] Buffer -&gt; Facebook [style=dashed] Buffer -&gt; Linkedin [style=dashed] subgraph cluster_2 &#123; node [style=filled]; label = &quot;Personal Records&quot;; color=blue Contacts FourSquare Calendar Omnifocus DayOne Google -&gt; Contacts Google -&gt; Calendar &#125; IFTTT -&gt; Yammer IFTTT -&gt; Facebook IFTTT -&gt; Linkedin IFTTT -&gt; Calendar [label= &quot;personal record&quot; ] IFTTT -&gt; DayOne [label= &quot;regular journal&quot; ] IFTTT -&gt; Evernote [label= &quot;`favorite&apos; in Pocket&quot; ] IFTTT -&gt; Omnifocus [label= &quot;tag `omnifocus&apos;&quot; ] FourSquare -&gt; IFTTT [label= &quot;check-in&quot; ] Twitter -&gt; IFTTT [label= &quot;new tweets&quot; ] Contacts -&gt; IFTTT [label= &quot;newly added&quot; ]&#125;]]></content>
      <categories>
        <category>Workflow</category>
      </categories>
      <tags>
        <tag>中文</tag>
        <tag>GTD</tag>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Advices to Undergraduate Research Trainee]]></title>
    <url>%2F2018%2F04%2F07%2FAdvices-to-Trainee%2F</url>
    <content type="text"><![CDATA[Undergraduate students with a plan to do a research degree usually have a lot of questions and not sure where to start. Based on my previous experience in supervising research trainee students from mainland China, I have the following suggestions: Be ConfidentIf you have completed an Engineering degree (including computer science) with average mark $&gt;80\%$ from countries such as China, Korea or India, you have the potential to do good research. For example, Chinese Higher Education Entrance Examination is a quite fair mechanism to identify prospective talents. A student who can get into a $211$ university’s Bachelor program might be in the top $20\%$ of all high school graduates in the country. Comparing with students in western countries, most top students in high school wish to do medical science or law, and very few would like to do science or engineering. Typically for students in the CS program, the entry might be possible for top $10-20\%$ or even down to the $20-30%$ range as in UK/Australia/NZ. Many established computer scientists, they were not as brilliant as most of us would like to believe. If you have completed a solid Bachelor program, you will have all the potentials to be good researchers. I am aware of several faculty members who have completed their Ph.D. here, but they didn’t even get the luck of being admitted into a Bachelor program when they took the Chinese Higher Education Entrance Examination (in $2001$ and $2002$ respectively), let alone a decent university. But after strict and solid research training, some could get faculty positions in the country. So, the first thing you should do is to be confident: yes, you can! Work with a Great SupervisorEven you have all the talents to be a great researcher, without proper guidance and training, your talents might be wasted. If you doubt it, think about those Chinese soccer players. Actually research in mainland China has improved significantly in the past two decades. A lot of high impact researchers are working in Chinese universities: some home grown, some returned from overseas. If you would like to pursue a research degree, your first task is to identify, approach, and hook up with a great supervisor, who may not be a professor, may not be a head of school, or dean, may not be in your own University. But as long as you two can trust each other, and you can follow his guidance, you will have a better start in your research career. Across the Great Wall we can reach every corner in the worldYunfeng Wang Your supervisor needs not to be in the same University, the same city, or even the same country. Roughly, what defines a good supervisor for you as a trainee: who has the expertise in the area that interests you; who has been successful in training a mundane student into a great one; who wishes to invest his time on you; who would like to provide constructive feedback for you to build up the profile Plan Well and Work Hard:No matter how talented, you have to work hard. One colleague once said: you should work 8 days per week, 25 hours per day! :p I don’t disagree. However, working hard is not enough, you will have to work correctly and smartly. Before your future supervisor gives you some detailed guidance, my suggestion is as below: Make a plan with key milestones, such as: within six months, find a supervisor and work closely with him/her; build up the research background by following your supervisor’s training guidance; This training might take 1-2 years, or up to 3-4 years in some top team if you join them in the first year of Bachelor study. Try to do some quality research and get published within 1.5 year: If you can, you might have chance to get a scholarship in some overseas university; otherwise, keep doing research in a master by research program and attempt the application upon graduating. For now, build up your knowledge in math: Statistics Inference, Linear Algebra, and Optimization. For now, improve your Hands-on Skills: Python, R, or Matlab; Apache Spark or GPU programming skills No matter how boring this training stage might be, you should strictly follow a training schedule. 1: The first version of this article was posted at Chinese Zhihu。↩]]></content>
      <categories>
        <category>Students</category>
      </categories>
      <tags>
        <tag>Methodology</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[The Art of Taoci]]></title>
    <url>%2F2018%2F03%2F24%2FThe-Art-of-Taoci%2F</url>
    <content type="text"><![CDATA[套磁是一门艺术！Bear Guts 由于研究方向比较热门并且所在的管理职位和博士生入学相关，我差不多每周都能收到10多封套磁信，主要来源于中国、大印度、马来、印尼、中东、还有荷兰。估计由于模板的存在，大多数套磁信还是有礼有节。主要给我印象比较深刻的问题只有如下几个： 最让人火大的莫过于，收到一份情真意切的套磁信，正准备电话询问细节，结果1个小时之内，从好几个同事那边转发过来，说：“我觉得这个申请人的背景比较适合你的研究组”。或者有2、3个同事同时冲过来说：“我要了这个申请人！” 老兄，群发套磁信，也别给同一个系里面的人群发啊！第一种情况，伤害了老板的心啊；第二种呢，还想挑起内斗，玩个二桃杀三士么？所以切记： 套磁信，同一个大学不要同时套2个以上的老板。 不诚实，夸大成果。一般你说了你发表了几篇一般文章，老板也懒得去查细节；但是有人在CV 中说发表了3篇IEEE TRANSACTIONS。眼睛一亮，看看他做的什么吧，结果找啊找啊找，什么也找不到。电话给他的导师，发现是投稿过3篇IEEE TRANSACTIONS，都被拒了。这样的申请人啊，在学术圈估计真混不长。 不回复老板的回信。这个问题主要是中国申请人的。也许因为大家习惯了用QQ、微信等，没有意识到许多国外大学Email才是官方的通讯渠道。对感兴趣的申请人，许多老板都会在看到套磁信后，马上EMAIL回复。我对感兴趣的博后申请人，经常在看到套磁信的2分钟内就回复说，“本组现在没有经费雇佣你为博士后，但是你如果想过来3个月做访问学者，我还是可以提供支持的。” 结果许多申请人，如泥牛入海，完全没有回响。即使你对我没有兴趣，哼唧一下表示礼貌，总不会累死吧！套磁信那么长都憋出来了，一句回复也能累死你？其实，中小老板很少直接招不熟悉的人做2、3年博后的，一般是给2、3个月的RA或者访问学者，试试看。 套磁信完全没有针对性，如果把套磁对象换个其他名字，这封信还可以使用。先举两个博士后套磁信的例子： Dear Dr. XXX, My name is XXX, and I am writing to inquire about the availability of obtaining a postdoctoral position in your institution. I received my Ph.D. degree from XXX in June XXX. My Ph.D. dissertation title is “XXXXXXX”. My research interests focus on xxxxxx and system engineering. My Ph.D. dissertation focuses on XXX by means of xxxx. I have published XXX papers in SCI journals, XXX papers in EI journals along with one paper under revision. With many years of rich experience in study on operational research and xxxx, I master solving fuzzy XXXXXX. With deep understanding of xxxxx related basic theory of knowledge and technology, thanks to my research activities, I have a strong academic background on xxxx xxx, xxxxxxx, etc. Additionally, I have participated in several xxxxx projects which endow me rich engineering experiences. I believe that I am a xxxxxxx, as well as a good collaborator with excellent communication and writing skills. Also, I believe that exciting discoveries often come from multi-disciplinary researches and a training opportunity in your lab would help me advance greatly. I would be highly grateful if you could give me a chance.Attached please find my CV with the statement of my research interest and the contact information. If needed, I can send you a hard copy of the materials. I am more than willing to answer any of your questions concerning my application and research. I am looking forward to your response. Sincerely, Dear Dr. XXX, My name is XXX XXX, and I am writing to look for any opportunities for a postdoctoral position in your team. Your advices will be greatly appreciated. I got my doctoral degree in year XXX, and now I am working as a teacher and master instructor in XXX University. From year XXXX, I’m the XXXX committee member of the XXXX, and from XXX to now, I’m the XXXX. I have published several papers and monographs, as well as presided over a number of research projects, such as the project named “XXXXX” funded by Ministry of XXXXX, and the “XXXXX” scientific research project of XXXXXX. I have strong passion for XXX XXX, with proactive stance in synergetic learning research and a desire to make a positive change in online technologic applying analysis. I eagerly hope you could consider my application and offer me a chance to improve myself both on academic and research ability. Looking forward to your news. Yours Sincerely, 整个信在内容、英文方面没有明显漏洞。但是呢，实际上效果不佳，因为： 一般老板首先会看，这个套磁信和我有什么关系呢？你介绍了一通自己，我知道你很厉害，但是你熟悉我这个实验室么？知道我这里是做什么的么？你的技能和知识对我的实验室有什么帮助啊？通篇没有提到和我有关的东西，为什么我要花时间看你的附件CV啊，删除！ 博士生的话，可以提training opportunity，本来博士就是一个训练过程；但对于博后，老板期望你召之即来、来之能战。另外，为什么老板需要花钱雇佣你来HELP YOU ADVANCE GREATLY或者IMPROVE YOURSELF呢？又不是洋雷锋。 最后一个问题是，从老板的角度来讲，找博后其实是卖方市场，优秀博士毕业生旁边经常就有老板求着说，到我这边来做博后吧，能量大的老板可能直接就给了tenure track position。老板好不容易弄到的研究基金，当然希望能够找到个高手博后。即使你的水平就那么多，也不能做出begging状，所以，要小心使用这个词if you can give/offer me a chance。 有水平的话，架子还是需要摆一摆的；水平不够摆架子的话，也别低三下四。其实，不论是博士生或者博士后申请，套磁可以很简单直白的，特别是能够做到对你套磁的老板的组比较熟悉，让老板给你回信问细节，那就达到目的了。 来看2个正面的例子：下面这封离开模板千里，但是我直接打电话问他的情况了，其中的一个关键是：他看了我研究组的网站，知道我的组做什么，卖点是什么。 Dear Dr XXXX, I am a student at XXXXX with a major in XXXX. I am a master honor student and will be graduating this December. I am planning to attend graduate school in XXXXX, with a focus on XXXXX. I have been exploring XXXX graduate programs when I am working on XXXX project, and I am particularly interested in your research interest, XXXX. I hope you don’t mind my getting in touch, but I’d like to inquire whether you are currently accepting PhD students. If you are, would you willing to talk to me a bit more by email. I have explored your website in detail, and it seems like an excellent fit for me because of its emphasis on XXXX.I know you’re very busy so I appreciate any time you can reply me. Thanks very much. Sincerely, 再来看两封印度学生的套磁信，信件写的很感人，但是可能印度IIT的统一模板就是这个，因为差不多到了每年某个时候，我就可以收到一大堆这种架构的信。其实内容还是很勾人的呢。 Dear Professor XXXXX, I read your paper ‘XXXXXXXXXXXXX’ and the experience was quite overwhelming as well as enriching.（你看，我知道你的亮点文章，其实谁知道看没看呢。） I am a pre-final year undergraduate student at Indian Institute of Technology (IIT) XXXX, India pursuing my B.S-M.S Dual degree in XXXX. While browsing through your profile, I came to know about your Research work.I have had quite a few research experiences in past which include research internships with Princeton University (U.S.A), IBM research (India) and University of Greifswald (Germany).（牛校走过一番啊，营造出哄抢气氛：你不要我，有的是人要我呢。） I wish to pursue a research project under your guidance/or otherwise would be glad even if I could assist you in any currently ongoing project during XXX . I am interested and enthusiastic to carry out productive research so as to enhance and exploit my skills and to contribute positively to the research going on in these fields. I think that my efforts and new ideas could be quite helpful to what the project/research topic demands.（我对你干的事情会有帮助的呢：说不定有new idea哦） I tried to contact you a few months back also but there was some issues with my email server leading to some difficulties in receiving emails.（前几个月我EMAIIL过你的，但是你没理我，算啦，我就给你个台阶，说也许我大学邮件服务器不给力：给老板造成内疚感，你不理我！其实呢，老板也记不清是不是收到过了，一般都删除的，对吧？） Should you require any more information, I would be glad to provide. My Curriculum Vitae is attached along with for your kind perusal.Thanking you for your kind consideration and looking forward to receiving your favorable response on the subject. Best Regards, Dear XXXX I came to know about you from your research paper “XXXXXX”. I am a final year student in the M.Sc (Integrated) program of Department of Mathematics and Statistics in the Indian Institute of Technology, XXXXXX currently in my last semester of academic program. My cumulative performance index after 9 semesters is 8.3/10. I would like to pursue research in statistics and machine learning and have a keen interest in statistical inferences, bayesian statistics and machine learning. I have been a summer research assistant at the XXXXX Lab, School of Computer Science, University of Waterloo under Prof. XXXXX in XXXX and at Graduate School of Informatics, Kyoto University in XXXX. I complete my studies at IIT XXXXX in April and would really like to make the most of the break by gaining some useful research experience under your guidance. While browsing, I was intrigued by your work and found that my interest was in line with the research work that you do. I would be really glad if I could get an opportunity to do a research project under your guidance or would be glad even if I could assist in any ongoing project from XX’15 to XXX’15 (for a XXXX week period). I would love to build on these works and I look forward to cultivate something striking out of my acquaintance with these concepts by doing some research work so that I can broaden my horizons. I would be grateful if you could please consider my application. I have attached my CV along with for your perusal.Thanking you. With best regards, 平心而论，这两封印度套磁信属于典范级别的了。不过由于IIT的学生差不多每人都这个套路，许多老板都看厌倦了，所以你还是需要小心使用。按照思路，自己改编个具有中国特色的吧。 1: The first version of this article was posted at Chinese Zhihu。↩]]></content>
      <categories>
        <category>Students</category>
      </categories>
      <tags>
        <tag>中文</tag>
        <tag>Applications</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My 1937]]></title>
    <url>%2F2018%2F03%2F21%2FMy-1937%2F</url>
    <content type="text"><![CDATA[So loooooog…翻出十年前的随笔，多年以后失落低迷的感觉仍然如此清晰，何从何去？ 内逢风雨飘摇 外临强敌压境自身势单力薄 友邦军力疲软 不能宣战 决不投降 我的1937 何去何从？ Let it go …无关风月 我记得，你和我去过的每一个地方。那些地方，统统都留在我的心里面。我不会说，我老了。我只是会说，我在这里太久。时间久了，难免知道人总会慢慢将过去淡忘。也会看着些东西，无声无息地消失。我前两日不知道在想什么，无端端跑去看日落。那个日落，就同我记得和你一起去看的那个日落一模一样。我为什么要走？怪我自己啦]]></content>
      <categories>
        <category>Enterprise</category>
      </categories>
      <tags>
        <tag>mood</tag>
        <tag>中文</tag>
      </tags>
  </entry>
</search>
